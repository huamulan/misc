
a.out:     file format elf64-x86-64


Disassembly of section .init:

00000000004003f0 <_init>:
  4003f0:	48 83 ec 08          	sub    $0x8,%rsp
  4003f4:	e8 73 00 00 00       	callq  40046c <call_gmon_start>
  4003f9:	e8 02 01 00 00       	callq  400500 <frame_dummy>
  4003fe:	e8 cd 02 00 00       	callq  4006d0 <__do_global_ctors_aux>
  400403:	48 83 c4 08          	add    $0x8,%rsp
  400407:	c3                   	retq   

Disassembly of section .plt:

0000000000400410 <__stack_chk_fail@plt-0x10>:
  400410:	ff 35 da 0b 20 00    	pushq  0x200bda(%rip)        # 600ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
  400416:	ff 25 dc 0b 20 00    	jmpq   *0x200bdc(%rip)        # 600ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
  40041c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400420 <__stack_chk_fail@plt>:
  400420:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601000 <_GLOBAL_OFFSET_TABLE_+0x18>
  400426:	68 00 00 00 00       	pushq  $0x0
  40042b:	e9 e0 ff ff ff       	jmpq   400410 <_init+0x20>

0000000000400430 <__libc_start_main@plt>:
  400430:	ff 25 d2 0b 20 00    	jmpq   *0x200bd2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x20>
  400436:	68 01 00 00 00       	pushq  $0x1
  40043b:	e9 d0 ff ff ff       	jmpq   400410 <_init+0x20>

Disassembly of section .text:

0000000000400440 <_start>:
  400440:	31 ed                	xor    %ebp,%ebp
  400442:	49 89 d1             	mov    %rdx,%r9
  400445:	5e                   	pop    %rsi
  400446:	48 89 e2             	mov    %rsp,%rdx
  400449:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40044d:	50                   	push   %rax
  40044e:	54                   	push   %rsp
  40044f:	49 c7 c0 c0 06 40 00 	mov    $0x4006c0,%r8
  400456:	48 c7 c1 30 06 40 00 	mov    $0x400630,%rcx
  40045d:	48 c7 c7 e3 05 40 00 	mov    $0x4005e3,%rdi
  400464:	e8 c7 ff ff ff       	callq  400430 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	90                   	nop
  40046b:	90                   	nop

000000000040046c <call_gmon_start>:
  40046c:	48 83 ec 08          	sub    $0x8,%rsp
  400470:	48 8b 05 69 0b 20 00 	mov    0x200b69(%rip),%rax        # 600fe0 <_DYNAMIC+0x190>
  400477:	48 85 c0             	test   %rax,%rax
  40047a:	74 02                	je     40047e <call_gmon_start+0x12>
  40047c:	ff d0                	callq  *%rax
  40047e:	48 83 c4 08          	add    $0x8,%rsp
  400482:	c3                   	retq   
  400483:	90                   	nop
  400484:	90                   	nop
  400485:	90                   	nop
  400486:	90                   	nop
  400487:	90                   	nop
  400488:	90                   	nop
  400489:	90                   	nop
  40048a:	90                   	nop
  40048b:	90                   	nop
  40048c:	90                   	nop
  40048d:	90                   	nop
  40048e:	90                   	nop
  40048f:	90                   	nop

0000000000400490 <__do_global_dtors_aux>:
  400490:	55                   	push   %rbp
  400491:	48 89 e5             	mov    %rsp,%rbp
  400494:	53                   	push   %rbx
  400495:	48 83 ec 08          	sub    $0x8,%rsp
  400499:	80 3d 80 0b 20 00 00 	cmpb   $0x0,0x200b80(%rip)        # 601020 <__bss_start>
  4004a0:	75 4b                	jne    4004ed <__do_global_dtors_aux+0x5d>
  4004a2:	bb 40 0e 60 00       	mov    $0x600e40,%ebx
  4004a7:	48 8b 05 7a 0b 20 00 	mov    0x200b7a(%rip),%rax        # 601028 <dtor_idx.7469>
  4004ae:	48 81 eb 38 0e 60 00 	sub    $0x600e38,%rbx
  4004b5:	48 c1 fb 03          	sar    $0x3,%rbx
  4004b9:	48 83 eb 01          	sub    $0x1,%rbx
  4004bd:	48 39 d8             	cmp    %rbx,%rax
  4004c0:	73 24                	jae    4004e6 <__do_global_dtors_aux+0x56>
  4004c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4004c8:	48 83 c0 01          	add    $0x1,%rax
  4004cc:	48 89 05 55 0b 20 00 	mov    %rax,0x200b55(%rip)        # 601028 <dtor_idx.7469>
  4004d3:	ff 14 c5 38 0e 60 00 	callq  *0x600e38(,%rax,8)
  4004da:	48 8b 05 47 0b 20 00 	mov    0x200b47(%rip),%rax        # 601028 <dtor_idx.7469>
  4004e1:	48 39 d8             	cmp    %rbx,%rax
  4004e4:	72 e2                	jb     4004c8 <__do_global_dtors_aux+0x38>
  4004e6:	c6 05 33 0b 20 00 01 	movb   $0x1,0x200b33(%rip)        # 601020 <__bss_start>
  4004ed:	48 83 c4 08          	add    $0x8,%rsp
  4004f1:	5b                   	pop    %rbx
  4004f2:	c9                   	leaveq 
  4004f3:	c3                   	retq   
  4004f4:	66 66 66 2e 0f 1f 84 	data32 data32 nopw %cs:0x0(%rax,%rax,1)
  4004fb:	00 00 00 00 00 

0000000000400500 <frame_dummy>:
  400500:	55                   	push   %rbp
  400501:	48 83 3d 3f 09 20 00 	cmpq   $0x0,0x20093f(%rip)        # 600e48 <__JCR_END__>
  400508:	00 
  400509:	48 89 e5             	mov    %rsp,%rbp
  40050c:	74 12                	je     400520 <frame_dummy+0x20>
  40050e:	b8 00 00 00 00       	mov    $0x0,%eax
  400513:	48 85 c0             	test   %rax,%rax
  400516:	74 08                	je     400520 <frame_dummy+0x20>
  400518:	bf 48 0e 60 00       	mov    $0x600e48,%edi
  40051d:	c9                   	leaveq 
  40051e:	ff e0                	jmpq   *%rax
  400520:	c9                   	leaveq 
  400521:	c3                   	retq   
  400522:	90                   	nop
  400523:	90                   	nop

0000000000400524 <return_test>:
  400524:	55                   	push   %rbp
  400525:	48 89 e5             	mov    %rsp,%rbp
  400528:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  40052f:	48 89 f8             	mov    %rdi,%rax
  400532:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
  400539:	00 00 
  40053b:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
  40053f:	31 d2                	xor    %edx,%edx
  400541:	c6 85 70 ff ff ff 00 	movb   $0x0,-0x90(%rbp)
  400548:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
  40054f:	48 89 10             	mov    %rdx,(%rax)
  400552:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
  400559:	48 89 50 08          	mov    %rdx,0x8(%rax)
  40055d:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
  400561:	48 89 50 10          	mov    %rdx,0x10(%rax)
  400565:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
  400569:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40056d:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
  400571:	48 89 50 20          	mov    %rdx,0x20(%rax)
  400575:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
  400579:	48 89 50 28          	mov    %rdx,0x28(%rax)
  40057d:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
  400581:	48 89 50 30          	mov    %rdx,0x30(%rax)
  400585:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
  400589:	48 89 50 38          	mov    %rdx,0x38(%rax)
  40058d:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
  400591:	48 89 50 40          	mov    %rdx,0x40(%rax)
  400595:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
  400599:	48 89 50 48          	mov    %rdx,0x48(%rax)
  40059d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
  4005a1:	48 89 50 50          	mov    %rdx,0x50(%rax)
  4005a5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4005a9:	48 89 50 58          	mov    %rdx,0x58(%rax)
  4005ad:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4005b1:	48 89 50 60          	mov    %rdx,0x60(%rax)
  4005b5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4005b9:	48 89 50 68          	mov    %rdx,0x68(%rax)
  4005bd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4005c1:	48 89 50 70          	mov    %rdx,0x70(%rax)
  4005c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4005c9:	48 89 50 78          	mov    %rdx,0x78(%rax)
  4005cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4005d1:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  4005d8:	00 00 
  4005da:	74 05                	je     4005e1 <return_test+0xbd>
  4005dc:	e8 3f fe ff ff       	callq  400420 <__stack_chk_fail@plt>
  4005e1:	c9                   	leaveq 
  4005e2:	c3                   	retq   

00000000004005e3 <main>:
  4005e3:	55                   	push   %rbp
  4005e4:	48 89 e5             	mov    %rsp,%rbp
  4005e7:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
  4005ee:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4005f5:	00 00 
  4005f7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4005fb:	31 c0                	xor    %eax,%eax
  4005fd:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
  400604:	48 89 c7             	mov    %rax,%rdi
  400607:	b8 00 00 00 00       	mov    $0x0,%eax
  40060c:	e8 13 ff ff ff       	callq  400524 <return_test>
  400611:	b8 00 00 00 00       	mov    $0x0,%eax
  400616:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40061a:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
  400621:	00 00 
  400623:	74 05                	je     40062a <main+0x47>
  400625:	e8 f6 fd ff ff       	callq  400420 <__stack_chk_fail@plt>
  40062a:	c9                   	leaveq 
  40062b:	c3                   	retq   
  40062c:	90                   	nop
  40062d:	90                   	nop
  40062e:	90                   	nop
  40062f:	90                   	nop

0000000000400630 <__libc_csu_init>:
  400630:	48 89 6c 24 d8       	mov    %rbp,-0x28(%rsp)
  400635:	4c 89 64 24 e0       	mov    %r12,-0x20(%rsp)
  40063a:	48 8d 2d e3 07 20 00 	lea    0x2007e3(%rip),%rbp        # 600e24 <__init_array_end>
  400641:	4c 8d 25 dc 07 20 00 	lea    0x2007dc(%rip),%r12        # 600e24 <__init_array_end>
  400648:	4c 89 6c 24 e8       	mov    %r13,-0x18(%rsp)
  40064d:	4c 89 74 24 f0       	mov    %r14,-0x10(%rsp)
  400652:	4c 89 7c 24 f8       	mov    %r15,-0x8(%rsp)
  400657:	48 89 5c 24 d0       	mov    %rbx,-0x30(%rsp)
  40065c:	48 83 ec 38          	sub    $0x38,%rsp
  400660:	4c 29 e5             	sub    %r12,%rbp
  400663:	41 89 fd             	mov    %edi,%r13d
  400666:	49 89 f6             	mov    %rsi,%r14
  400669:	48 c1 fd 03          	sar    $0x3,%rbp
  40066d:	49 89 d7             	mov    %rdx,%r15
  400670:	e8 7b fd ff ff       	callq  4003f0 <_init>
  400675:	48 85 ed             	test   %rbp,%rbp
  400678:	74 1c                	je     400696 <__libc_csu_init+0x66>
  40067a:	31 db                	xor    %ebx,%ebx
  40067c:	0f 1f 40 00          	nopl   0x0(%rax)
  400680:	4c 89 fa             	mov    %r15,%rdx
  400683:	4c 89 f6             	mov    %r14,%rsi
  400686:	44 89 ef             	mov    %r13d,%edi
  400689:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40068d:	48 83 c3 01          	add    $0x1,%rbx
  400691:	48 39 eb             	cmp    %rbp,%rbx
  400694:	75 ea                	jne    400680 <__libc_csu_init+0x50>
  400696:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
  40069b:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
  4006a0:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12
  4006a5:	4c 8b 6c 24 20       	mov    0x20(%rsp),%r13
  4006aa:	4c 8b 74 24 28       	mov    0x28(%rsp),%r14
  4006af:	4c 8b 7c 24 30       	mov    0x30(%rsp),%r15
  4006b4:	48 83 c4 38          	add    $0x38,%rsp
  4006b8:	c3                   	retq   
  4006b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004006c0 <__libc_csu_fini>:
  4006c0:	f3 c3                	repz retq 
  4006c2:	90                   	nop
  4006c3:	90                   	nop
  4006c4:	90                   	nop
  4006c5:	90                   	nop
  4006c6:	90                   	nop
  4006c7:	90                   	nop
  4006c8:	90                   	nop
  4006c9:	90                   	nop
  4006ca:	90                   	nop
  4006cb:	90                   	nop
  4006cc:	90                   	nop
  4006cd:	90                   	nop
  4006ce:	90                   	nop
  4006cf:	90                   	nop

00000000004006d0 <__do_global_ctors_aux>:
  4006d0:	55                   	push   %rbp
  4006d1:	48 89 e5             	mov    %rsp,%rbp
  4006d4:	53                   	push   %rbx
  4006d5:	48 83 ec 08          	sub    $0x8,%rsp
  4006d9:	48 8b 05 48 07 20 00 	mov    0x200748(%rip),%rax        # 600e28 <__CTOR_LIST__>
  4006e0:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4006e4:	74 19                	je     4006ff <__do_global_ctors_aux+0x2f>
  4006e6:	bb 28 0e 60 00       	mov    $0x600e28,%ebx
  4006eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4006f0:	48 83 eb 08          	sub    $0x8,%rbx
  4006f4:	ff d0                	callq  *%rax
  4006f6:	48 8b 03             	mov    (%rbx),%rax
  4006f9:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  4006fd:	75 f1                	jne    4006f0 <__do_global_ctors_aux+0x20>
  4006ff:	48 83 c4 08          	add    $0x8,%rsp
  400703:	5b                   	pop    %rbx
  400704:	c9                   	leaveq 
  400705:	c3                   	retq   
  400706:	90                   	nop
  400707:	90                   	nop

Disassembly of section .fini:

0000000000400708 <_fini>:
  400708:	48 83 ec 08          	sub    $0x8,%rsp
  40070c:	e8 7f fd ff ff       	callq  400490 <__do_global_dtors_aux>
  400711:	48 83 c4 08          	add    $0x8,%rsp
  400715:	c3                   	retq   
